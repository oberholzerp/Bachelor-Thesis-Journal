debuging hardware emulation of 2mm
 - some errors
	[pascalo@fpga1 build-hw_emu]$ pwd
	/home/pascalo/Documents/fpga-exec-time_fixedsize_int/2mm/build-hw_emu
	[pascalo@fpga1 build-hw_emu]$ ./time.exe 
	INFO: [SDx-EM 01] Hardware emulation runs detailed simulation underneath. It may take long time for large data set. Please use a small dataset for faster execution. You can still get performance trend for your kernel with smaller dataset.
	ERROR: Invalid scalar argument size, expected 4 got 8
	ERROR: clSetKernelArg() for kernel "kernel0", argument index 2.

	ERROR: Invalid scalar argument size, expected 4 got 8
	ERROR: clSetKernelArg() for kernel "kernel0", argument index 2.

	OpenCL error: CL_INVALID_ARG_SIZE
	ERROR: Invalid scalar argument size, expected 4 got 8
	ERROR: clSetKernelArg() for kernel "kernel0", argument index 2.

	time.exe: /home/pascalo/Documents/fpga-exec-time_fixedsize_int/2mm/host/host.c:146: kernel_2mm: Assertion `clSetKernelArg(kernel0, 2, sizeof(alpha), &alpha) == 0' failed.
	WARNING: Profiling may contain incomplete information. Please call clReleaseProgram() from your host code.
	terminate called after throwing an instance of 'std::system_error'
	  what():  Resource deadlock avoided
	terminate called recursively
	terminate called recursively
	Aborted (core dumped)
 - replacing all DATA_TYPE identifier with int identifier
	 - various errors
		 - segmentation fault
		 - terminate called without an active exception
			terminate called recursively
		 - *** Error in `./time.exe': double free or corruption (!prev): 0x00000000024ba880 ***
			Segmentation fault (core dumped)
		 - terminate called after throwing an instance of 'std::system_error'
			  what():  Resource deadlock avoided
			terminate called recursively
			Segmentation fault (core dumped)

added relation of OpenCL memory model and FPGA memory to the appendix

build kernel via SPIR without get_local_id
 - working
 - correct result

build kernel via SPIR with get_local_id
 - not working
	 - Failed to build kernel(ip) kernel0

build kernel via SPIR with get_global_id
 - not finished

build kernel with get_local_id and size 2000
 - finished

